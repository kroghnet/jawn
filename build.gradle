buildscript {
    repositories { maven { url "https://plugins.gradle.org/m2/" } }
    //dependencies { classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.8' }
}

//http://gradle.org/docs/current/userguide/multi_project_builds.html#sub:real_life_examples

allprojects {
    apply plugin: 'java'
    apply from: "$rootProject.projectDir/maven.gradle"

    // maven metadata
    group = "net.javapla.jawn"
    version = "0.9.14"

    tasks.withType(Javadoc).all { enabled = true }
}

subprojects {
    apply plugin: 'eclipse'
//    apply plugin: 'jacoco'
//    apply plugin: 'net.ltgt.errorprone'


    // compiler options
    sourceCompatibility = JavaVersion.VERSION_1_10
    targetCompatibility = JavaVersion.VERSION_1_10

    repositories { mavenCentral() }
    
    dependencies {
        //Test across all submodules
        testCompile ('junit:junit:4.12') {
            exclude module: 'hamcrest-core'
        }
        testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    }

    // test configurations
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    test {
        testLogging {
            // Make sure output from
            // standard out or error is shown
            // in Gradle output.
            showStandardStreams = true
        }
        ignoreFailures false
        
    }
    /*jacocoTestReport {
        dependsOn test
    }*/

    /*tasks.withType(JavaCompile) {
     options.compilerArgs += [ '-Xep:DeadException:WARN', '-Xep:GuardedByValidator:OFF' ]
     }*/
    // implement https://github.com/kt3k/coveralls-gradle-plugin
}

//https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.ResolutionStrategy.html
configurations.all {
    resolutionStrategy {
        // fail eagerly on version conflict (includes transitive dependencies)
        // e.g. multiple different versions of the same dependency (group and name are equal)
        failOnVersionConflict()
    }
}



/* ******************* */
//  Default implementation of the framework
/* ******************* */

// Specify the resulting archive
archivesBaseName = 'jawn'
dependencies {
    // Currently, this is the only needed dependency that has everything you need
    compile project(':jawn-core')
    compile project(':jawn-server-undertow')
    compile project(':jawn-templates-stringtemplate')
}
